'.source.js':
  '发起网络请求':
    'prefix': 'wxrequest'
    'body': '''
    wx.request({
      url: 'https://${1:URL}',
      // data: {},
      // header: {}, // 设置请求的 header , header 中不能设置 Referer
      // dataType: 'json', // 默认为 json。如果设置了 dataType 为 json，则会尝试对响应的数据做一次 JSON.parse
      method: '${2:GET}', // OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT
      success: function(res){
        ${3}// success
      },
      fail: function() {
        ${4}// fail
      },
      complete: function() {
        // complete
      }
    })
    '''
  '上传文件,配合wxtask使用':
    'prefix': 'wxuploadFile'
    'body': '''
    const ${1:task} = wx.uploadFile({
      url: 'https://${2:URL}',
      filePath:'${3:String}',
      name:'${4: String}',
      // header: {}, // 设置请求的 header
      // formData: {}, // HTTP 请求中其他额外的 form data
      success: function(res){
        $5// success
      },
      fail: function() {
        $6// fail
      },
      complete: function() {
        $7// complete
      }
    })
    '''
  '下载文件,配合wxtask使用':
    'prefix': 'wxdownloadFile'
    'body': '''
    const ${1:task} = wx.downloadFile({
      url: 'https://${1:URL}',
      // type: 'image', // 下载资源的类型，用于客户端识别处理，有效值：image/audio/video
      // header: {}, // 设置请求的 header
      success: function(res){
        $2// success
      },
      fail: function() {
        $3// fail
      },
      complete: function() {
        $4// complete
      }
    })
    '''
  '上传下载任务进度':
    'prefix': 'wxtask'
    'body': '''
    ${1:task}.onProgressUpdate((res) => {
        console.log('下载进度', res.progress)
        console.log('已经下载的数据长度', res.totalBytesWritten)
        console.log('预期需要下载的数据总长度', res.totalBytesExpectedToWrite)
    })

    ${1:task}.abort() // 取消下载任务
    '''
  '创建 WebSocket 连接':
    'prefix': 'wxconnectSocket'
    'body': '''
    wx.connectSocket({
      url: 'wss://${1:String}',
      data: {${2:Object}},
      // header: {}, // 设置请求的 header
      method: '${3:GET}', // OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT
      // protocols: [], //子协议数组
      success: function(res){
        $4// success
      },
      fail: function() {
        $5// fail
      },
      complete: function() {
        $6// complete
      }
    })
    '''
  '监听 WebSocket 打开':
    'prefix': 'wxonSocketOpen'
    'body': '''
    wx.onSocketOpen(function() {
      $1// callback
    })
    '''
  '监听 WebSocket 错误':
    'prefix': 'wxonSocketError'
    'body': '''
    wx.onSocketError(function() {
      $1// callback
    })
    '''
  '发送 WebSocket 消息':
    'prefix': 'wxsendSocketMessage'
    'body': '''
    wx.sendSocketMessage({
      data: '${1: String}',
      success: function(res){
        $2// success
      },
      fail: function() {
        $3// fail
      },
      complete: function() {
        $4// complete
      }
    })
    '''
  '接受 WebSocket 消息':
    'prefix': 'wxonSocketMessage'
    'body': '''
    wx.onSocketMessage(function(data) {
      $1// data
    })
    '''
  '关闭 WebSocket 连接':
    'prefix': 'wxcloseSocket'
    'body': '''
    wx.closeSocket({
      code: '${1: Number}', //一个数字值表示关闭连接的状态号，表示连接被关闭的原因
      reason: '${2: String}', //一个可读的字符串，表示连接被关闭的原因
      success: function(res){
        $3// success
      },
      fail: function() {
        $4// fail
      },
      complete: function() {
        $5// complete
      }
    })
    '''
  '监听 WebSocket 关闭':
    'prefix': 'wxonSocketClose'
    'body': '''
    wx.onSocketClose(function(res) {
      $1// callback
    })
    '''
